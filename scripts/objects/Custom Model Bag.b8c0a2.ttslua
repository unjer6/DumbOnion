stack_trace = {}
current_objs = {}
is_open = false

OPEN_BTN_PARAMS = {
    click_function = "open",
    function_owner = self,
    label          = "Open",
    position       = {0.7, 0.2, 0.5},
    rotation       = {0, 0, 0},
    width          = 220,
    height         = 110,
    font_size      = 50,
    color          = {1, 1, 1},
    font_color     = {0, 0, 0},
}

CLOSE_BTN_PARAMS = {
    click_function = "close",
    function_owner = self,
    label          = "Close",
    position       = {0.7, 0.2, 0.5},
    rotation       = {0, 0, 0},
    width          = 220,
    height         = 110,
    font_size      = 50,
    color          = {1, 1, 1},
    font_color     = {0, 0, 0},
}

BACK_BTN_PARAMS = {
    click_function = "back",
    function_owner = self,
    label          = "Back",
    position       = {0.3, 0.2, 0.5},
    rotation       = {0, 0, 0},
    width          = 220,
    height         = 110,
    font_size      = 50,
    color          = {1, 1, 1},
    font_color     = {0, 0, 0},
}

function onLoad(saveStr)
    local save = JSON.decode(saveStr)

    if (not save or not save.is_open) then
        self.createButton(OPEN_BTN_PARAMS)
    else
        self.createButton(CLOSE_BTN_PARAMS)
        self.createButton(BACK_BTN_PARAMS)
    end
end

function onSave()
    local save = {
        stack_trace = stack_trace,
        current_objs = current_objs,
        is_open = is_open
    }

    return JSON.encode(save)
end

function open()
    is_open = true
    destroy_current()
    spawn_trace()

    self.clearButtons()
    self.createButton(CLOSE_BTN_PARAMS)
    self.createButton(BACK_BTN_PARAMS)
end

function close()
    stack_trace = {}
    is_open = false
    destroy_current()

    self.clearButtons()
    self.createButton(OPEN_BTN_PARAMS)
end

function back()
    destroy_current()
    if (#stack_trace == 0) then
        is_open = false
        self.clearButtons()
        self.createButton(OPEN_BTN_PARAMS)
    else
        table.remove(stack_trace)
        spawn_trace()
        self.clearButtons()
        self.createButton(CLOSE_BTN_PARAMS)
        self.createButton(BACK_BTN_PARAMS)
    end
end

function destroy_current()
    for _, guid in pairs(current_objs) do
        obj = getObjectFromGUID(guid)
        if (obj) then obj.destruct() end
    end
    current_objs = {}
end

function spawn_trace()
    if(not is_open) then return end

    --[[ locate trace level ]]
    data = self.getData()
    for i = 1, #stack_trace do
        found = false
        for _, contained in pairs(data["ContainedObjects"]) do
            if(contained["GUID"] == stack_trace[i]) then
                data = contained
                found = true
                break
            end
        end
        if (not found) then return end
    end

    --[[ spawn objects ]]
    contained = data["ContainedObjects"]
    if (contained) then
        for i = 1, #contained do
            obj = spawnObjectData({
                data = contained[i],
                position = Vector(-30 + 4*i, 1, 32),
                rotation = Vector(0, 180, 0)
            })
            table.insert(current_objs, obj.guid)
        end
    end
end

function debug_log()
    log(stack_trace)
    log(current_objs)
    log(is_open)
end